// BootstrapForm.js
import React, { useState } from "react";
import { Stepper, Step, StepLabel, Button } from "@mui/material";
import PartAForm from "./partA";
import PartBForm from "./partB";
import axios from "axios";
import { useSnackbar } from 'notistack'; // Optional for notification

const BootstrapForm = () => {
  const [activeStep, setActiveStep] = useState(0);
  const [loading, setLoading] = useState(false);
  const [pageNumber, setPageNumber] = useState(1);
  const { enqueueSnackbar } = useSnackbar(); // Optional for notification
  const userId=1;

  // Save draft API call
 

  const handleSaveDraft = async (data) => {
    setLoading(true); // Show loading state
    try {
      const requestData = {
        // Your request data here (same as the one provided in your example)
      };
  
      const response = await axios.post(
        `https://localhost:8080/claim/step?userId=${userId}&pageNumber=${pageNumber}`,
        requestData,
        {
          headers: { "Content-Type": "application/json" },
        }
      );
  
      if (response.status === 200) {
        enqueueSnackbar("Draft saved successfully!", { variant: 'success' });
        // You don't need to increment pageNumber or activeStep here
      } else {
        enqueueSnackbar("Error saving draft!", { variant: 'error' });
      }
    } catch (error) {
      console.error("Error in API call:", error);
      enqueueSnackbar("Error saving draft!", { variant: 'error' });
    } finally {
      setLoading(false); // Hide loading state
    }
  };
  

  // Handle next step (after Part A)
  const handleNext = async (data) => {
    setLoading(true);
    try {
      const response = await axios.post("https://localhost:8080/api/submit", data);

      if (response.status === 200) {
        setActiveStep((prevStep) => prevStep + 1); // Move to next part (Part B)
      } else {
        console.error("API call failed:", response.status);
        setActiveStep((prevStep) => prevStep + 1); // Move to next part (Part B)
      }
    } catch (error) {
      console.error("Error during API call:", error);
      setActiveStep((prevStep) => prevStep + 1); // Move to next part (Part B)
    } finally {
      setLoading(false);
      setActiveStep((prevStep) => prevStep + 1); // Move to next part (Part B)
    }
  };

  const handleBack = () => {
    setActiveStep((prevStep) => prevStep - 1); // Move to previous page
  };

  const handleFinalSubmit = async (data) => {
    // Final submit logic goes here
  };

  return (
    <div className="container mt-5 bigForm">
      <Stepper activeStep={activeStep} alternativeLabel>
        <Step><StepLabel>Part A</StepLabel></Step>
        <Step><StepLabel>Part B</StepLabel></Step>
      </Stepper>

      <div className="form-content">
        {activeStep === 0 && (
          <PartAForm onNext={handleNext} onSaveDraft={handleSaveDraft} loading={loading} />
        )}
        {activeStep === 1 && (
          <PartBForm onPrevious={handleBack} onSubmit={handleFinalSubmit} loading={loading} />
        )}
      </div>
    </div>
  );
};

export default BootstrapForm;



const handleSaveDraft = async (data) => {
  setLoading(true);

  let name = "";
  if (creditorType === "individual") {
    name = data.individualName;
  } else if (creditorType === "organization") {
    name = data.organizationName;
  }

  setDisplayName(name); // Update the display name state

  const requestData = {
    RequestInfo: {},
    claimMstDetailsModel: {
      id: "claim123",
      creditorId: "creditor123",
      creditorIdType: data.creditorID,
      typeOfCreditor: data.creditorType,
      relatedParty: data.isRelatedParty,
      remarks: data.remarks,
      relationshipNature: data.natureOfRelationship,
      claimAppNum: data.claimAppNum || "",
      orgMstDetails: data.creditorType === "organization"
        ? {
            id: "org123",
            claimMst: "claim123",
            organizationName: data.organizationName,
            constitutionDetails: data.legalConstitution,
            isCinOrLlp: data.isCinOrLlp,
            registeredAddress: data.registeredAddress,
            emailId: data.emailAddress,
            authorizedFirstName: data.firstName,
            authorizedMiddleName: data.middleName,
            authorizedLastName: data.lastName,
            authorizedPersonDesignation: data.designation,
            authorizedPersonContactNumber: data.mobileNumber,
            authorizationLetter: data.authorizationLetter,
            auditDetails: {
              createdBy: "admin",
              lastModifiedBy: "admin",
              createdTime: Date.now(),
              lastModifiedTime: Date.now(),
            },
          }
        : null,
      individualCreditorMstDetails: data.creditorType === "individual"
        ? {
            id: "indiv123",
            claimMst: "claim123",
            name: data.name,
            creditorAddress: data.address,
            authorizedFirstName: data.firstIndividualName,
            authorizedMiddleName: data.middleIndividualName,
            authorizedLastName: data.lastIndividualName,
            emailId: data.emailAddress,
            auditDetails: {
              createdBy: "admin",
              lastModifiedBy: "admin",
              createdTime: Date.now(),
              lastModifiedTime: Date.now(),
            },
          }
        : null,
    },
  };

  try {
    const response = await axios.post(
      `http://localhost:8080/claim/step?userId=${userId}&pageNumber=${activeStep}`,
      requestData,
      { headers: { "Content-Type": "application/json" } }
    );

    if (response.status === 200) {
      console.log("Draft saved successfully");
    } else {
      console.log("Error saving draft:", response.status);
    }
  } catch (error) {
    console.error("Error in saving draft API call:", error);
  } finally {
    setLoading(false);
  }
};

